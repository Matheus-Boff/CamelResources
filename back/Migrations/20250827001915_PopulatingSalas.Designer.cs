// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back.Data;

#nullable disable

namespace back.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250827001915_PopulatingSalas")]
    partial class PopulatingSalas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("back.Models.Alocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlocacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId1")
                        .HasColumnType("int");

                    b.Property<int?>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int?>("NotebookId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("FuncionarioId1");

                    b.HasIndex("LaboratorioId", "DataAlocacao")
                        .IsUnique()
                        .HasFilter("[LaboratorioId] IS NOT NULL");

                    b.HasIndex("NotebookId", "DataAlocacao")
                        .IsUnique()
                        .HasFilter("[NotebookId] IS NOT NULL");

                    b.HasIndex("SalaId", "DataAlocacao")
                        .IsUnique()
                        .HasFilter("[SalaId] IS NOT NULL");

                    b.ToTable("Alocacoes");
                });

            modelBuilder.Entity("back.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cargo = "Programador Pleno",
                            DataAdmissao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = "1234567",
                            Nome = "João Silva"
                        },
                        new
                        {
                            Id = 2,
                            Cargo = "Analista",
                            DataAdmissao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = "9876543",
                            Nome = "Maria Souza"
                        },
                        new
                        {
                            Id = 3,
                            Cargo = "Estagiário",
                            DataAdmissao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = "1111111",
                            Nome = "Carlos Pereira"
                        });
                });

            modelBuilder.Entity("back.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumComputadores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("back.Models.Notebook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroPatrimonio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notebooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataAquisicao = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Notebook para João Silva",
                            NroPatrimonio = "1234567"
                        },
                        new
                        {
                            Id = 2,
                            DataAquisicao = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Notebook para Maria Souza",
                            NroPatrimonio = "9876543"
                        },
                        new
                        {
                            Id = 3,
                            DataAquisicao = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Notebook para Carlos Pereira",
                            NroPatrimonio = "1111111"
                        });
                });

            modelBuilder.Entity("back.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumLugares")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<bool>("Projetor")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Salas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumLugares = 30,
                            Numero = 101,
                            Projetor = true
                        },
                        new
                        {
                            Id = 2,
                            NumLugares = 25,
                            Numero = 102,
                            Projetor = false
                        },
                        new
                        {
                            Id = 3,
                            NumLugares = 50,
                            Numero = 201,
                            Projetor = true
                        },
                        new
                        {
                            Id = 4,
                            NumLugares = 40,
                            Numero = 202,
                            Projetor = false
                        });
                });

            modelBuilder.Entity("back.Models.Alocacao", b =>
                {
                    b.HasOne("back.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back.Models.Funcionario", null)
                        .WithMany("Alocacoes")
                        .HasForeignKey("FuncionarioId1");

                    b.HasOne("back.Models.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back.Models.Notebook", "Notebook")
                        .WithMany()
                        .HasForeignKey("NotebookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Funcionario");

                    b.Navigation("Laboratorio");

                    b.Navigation("Notebook");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("back.Models.Funcionario", b =>
                {
                    b.Navigation("Alocacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
